cmake_minimum_required(VERSION 2.8)

INCLUDE (CheckIncludeFiles)
INCLUDE (CheckFunctionExists)
INCLUDE (CheckLibraryExists) 
INCLUDE (CheckTypeSize) 
INCLUDE (CheckSymbolExists) 
INCLUDE (CheckTypeSize) 

if (UNIX)
  SET(CIRCLE_UNIX true)
else (UNIX)
  SET(CIRCLE_UNIX false)
endif (UNIX)

CHECK_INCLUDE_FILES(sys/wait.h HAVE_SYS_WAIT_H)
CHECK_INCLUDE_FILES(arpa/inet.h HAVE_ARPA_INET_H)
CHECK_INCLUDE_FILES(arpa/telnet.h HAVE_ARPA_TELNET_H)
CHECK_INCLUDE_FILES(assert.h HAVE_ASSERT_H)
CHECK_INCLUDE_FILES(crypt.h HAVE_CRYPT_H)
CHECK_INCLUDE_FILES(errno.h HAVE_ERRNO_H)
CHECK_INCLUDE_FILES(fcntl.h HAVE_FCNTL_H)
CHECK_INCLUDE_FILES(limits.h HAVE_LIMITS_H)
CHECK_INCLUDE_FILES(mcheck.h HAVE_MCHECK_H)
CHECK_INCLUDE_FILES(memory.h HAVE_MEMORY_H)
CHECK_INCLUDE_FILES(net/errno.h HAVE_NET_ERRNO_H)
CHECK_INCLUDE_FILES(netdb.h HAVE_NETDB_H)
CHECK_INCLUDE_FILES(netinet/in.h HAVE_NETINET_IN_H)
CHECK_INCLUDE_FILES(signal.h HAVE_SIGNAL_H)
CHECK_INCLUDE_FILES(string.h HAVE_STRING_H)
CHECK_INCLUDE_FILES(strings.h HAVE_STRINGS_H)
CHECK_INCLUDE_FILES(sys/fcntl.h HAVE_SYS_FCNTL_H)
CHECK_INCLUDE_FILES(sys/resource.h HAVE_SYS_RESOURCE_H)
CHECK_INCLUDE_FILES(sys/select.h HAVE_SYS_SELECT_H)
CHECK_INCLUDE_FILES(sys/socket.h HAVE_SYS_SOCKET_H)
CHECK_INCLUDE_FILES(sys/stat.h HAVE_SYS_STAT_H)
CHECK_INCLUDE_FILES(sys/time.h HAVE_SYS_TIME_H)
CHECK_INCLUDE_FILES(sys/types.h HAVE_SYS_TYPES_H)
CHECK_INCLUDE_FILES(sys/uio.h HAVE_SYS_UIO_H)
CHECK_INCLUDE_FILES(unistd.h HAVE_UNISTD_H)

CHECK_FUNCTION_EXISTS(_doprnt HAVE_DOPRNT)
CHECK_FUNCTION_EXISTS(vprintf HAVE_VPRINTF)
CHECK_FUNCTION_EXISTS(gettimeofday HAVE_GETTIMEOFDAY)
CHECK_FUNCTION_EXISTS(inet_addr HAVE_INET_ADDR)
CHECK_FUNCTION_EXISTS(inet_aton HAVE_INET_ATON)
CHECK_FUNCTION_EXISTS(select HAVE_SELECT)
CHECK_FUNCTION_EXISTS(snprintf HAVE_SNPRINTF)
CHECK_FUNCTION_EXISTS(strcasecmp HAVE_STRCASECMP)
CHECK_FUNCTION_EXISTS(strdup HAVE_STRDUP)
CHECK_FUNCTION_EXISTS(strerror HAVE_STRERROR)
CHECK_FUNCTION_EXISTS(stricmp HAVE_STRICMP)
CHECK_FUNCTION_EXISTS(strlcpy HAVE_STRLCPY)
CHECK_FUNCTION_EXISTS(strncasecmp HAVE_STRNCASECMP)
CHECK_FUNCTION_EXISTS(strnicmp HAVE_STRNICMP)
CHECK_FUNCTION_EXISTS(strstr HAVE_STRSTR)
CHECK_FUNCTION_EXISTS(vsnprintf HAVE_VSNPRINTF)

if (NOT HAVE_STRLCPY)
   SET(NEED_STRLCPY_PROTO true)
endif (NOT HAVE_STRLCPY)

CHECK_FUNCTION_EXISTS(accept HAVE_ACCEPT)
if (NOT HAVE_ACCEPT)
  SET(NEED_ACCEPT_PROTO true)
endif (NOT HAVE_ACCEPT)

CHECK_FUNCTION_EXISTS(atoi HAVE_ATOI)
if (NOT HAVE_ATOI)
  SET(NEED_ATOI_PROTO true)
endif (NOT HAVE_ATOI)

CHECK_FUNCTION_EXISTS(atol HAVE_ATOL)
if (NOT HAVE_ATOL)
  SET(NEED_ATOL_PROTO true)
endif (NOT HAVE_ATOL)

CHECK_FUNCTION_EXISTS(bind HAVE_BIND)
if (NOT HAVE_BIND)
  SET(NEED_BIND_PROTO true)
endif (NOT HAVE_BIND)

CHECK_FUNCTION_EXISTS(bzero HAVE_BZERO)
if (NOT HAVE_BZERO)
  SET(NEED_BZERO_PROTO true)
endif (NOT HAVE_BZERO)

CHECK_FUNCTION_EXISTS(chdir HAVE_CHDIR)
if (NOT HAVE_CHDIR)
  SET(NEED_CHDIR_PROTO true)
endif (NOT HAVE_CHDIR)

CHECK_FUNCTION_EXISTS(close HAVE_CLOSE)
if (NOT HAVE_CLOSE)
  SET(NEED_CLOSE_PROTO true)
endif (NOT HAVE_CLOSE)

CHECK_FUNCTION_EXISTS(crypt HAVE_CRYPT)
if (NOT HAVE_CRYPT)
  SET(NEED_CHDIR_CRYPT true)
endif (NOT HAVE_CRYPT)

CHECK_FUNCTION_EXISTS(fclose HAVE_FCLOSE)
if (NOT HAVE_FCLOSE)
  SET(NEED_FCLOSE_PROTO true)
endif (NOT HAVE_FCLOSE)

CHECK_FUNCTION_EXISTS(fcntl HAVE_FCNTL)
if (NOT HAVE_FCNTL)
  SET(NEED_FCNTL_PROTO true)
endif (NOT HAVE_FCNTL)

CHECK_FUNCTION_EXISTS(fflush HAVE_FFLUSH)
if (NOT HAVE_FFLUSH)
  SET(NEED_FFLUSH_PROTO true)
endif (NOT HAVE_FFLUSH)

CHECK_FUNCTION_EXISTS(fprintf HAVE_FPRINTF)
if (NOT HAVE_FPRINTF)
  SET(NEED_FPRINTF_PROTO true)
endif (NOT HAVE_FPRINTF)

CHECK_FUNCTION_EXISTS(fputc HAVE_FPUTC)
if (NOT HAVE_FPUTC)
  SET(NEED_FPUTC_PROTO true)
endif (NOT HAVE_FPUTC)

CHECK_FUNCTION_EXISTS(fputs HAVE_FPUTS)
if (NOT HAVE_FPUTS)
  SET(NEED_FPUTS_PROTO true)
endif (NOT HAVE_FPUTS)

CHECK_FUNCTION_EXISTS(fread HAVE_FREAD)
if (NOT HAVE_FREAD)
  SET(NEED_FREAD_PROTO true)
endif (NOT HAVE_FREAD)

CHECK_FUNCTION_EXISTS(fscanf HAVE_FSCANF)
if (NOT HAVE_FSCANF)
  SET(NEED_FSCANF_PROTO true)
endif (NOT HAVE_FSCANF)

CHECK_FUNCTION_EXISTS(fseek HAVE_FSEEK)
if (NOT HAVE_FSEEK)
  SET(NEED_FSEEK_PROTO true)
endif (NOT HAVE_FSEEK)

CHECK_FUNCTION_EXISTS(fwrite HAVE_FWRITE)
if (NOT HAVE_FWRITE)
  SET(NEED_FWRITE_PROTO true)
endif (NOT HAVE_FWRITE)

CHECK_FUNCTION_EXISTS(getpeername HAVE_GETPEERNAME)
if (NOT HAVE_GETPEERNAME)
  SET(NEED_GETPEERNAME_PROTO true)
endif (NOT HAVE_GETPEERNAME)

CHECK_FUNCTION_EXISTS(getpid HAVE_GETPID)
if (NOT HAVE_GETPID)
  SET(NEED_GETPID_PROTO true)
endif (NOT HAVE_GETPID)

CHECK_FUNCTION_EXISTS(getrlimit HAVE_GETRLIMIT)
if (NOT HAVE_GETRLIMIT)
  SET(NEED_GETRLIMIT_PROTO true)
endif (NOT HAVE_GETRLIMIT)

CHECK_FUNCTION_EXISTS(getsockname HAVE_GETSOCKNAME)
if (NOT HAVE_GETSOCKNAME)
  SET(NEED_GETSOCKNAME_PROTO true)
endif (NOT HAVE_GETSOCKNAME)

CHECK_FUNCTION_EXISTS(gettimeofday HAVE_GETTIMEOFDAY)
if (NOT HAVE_GETTIMEOFDAY)
  SET(NEED_GETTIMEOFDAY_PROTO true)
endif (NOT HAVE_GETTIMEOFDAY)

CHECK_FUNCTION_EXISTS(htonl HAVE_HTONL)
if (NOT HAVE_HTONL)
  SET(NEED_HTONL_PROTO true)
endif (NOT HAVE_HTONL)

CHECK_FUNCTION_EXISTS(htons HAVE_HTONS)
if (NOT HAVE_HTONS)
  SET(NEED_HTONS_PROTO true)
endif (NOT HAVE_HTONS)

CHECK_FUNCTION_EXISTS(inet_addr HAVE_INET_ADDR)
if (NOT HAVE_INET_ADDR)
  SET(NEED_INET_ADDR_PROTO true)
endif (NOT HAVE_INET_ADDR)

CHECK_FUNCTION_EXISTS(inet_aton HAVE_INET_ATON)
if (NOT HAVE_INET_ATON)
  SET(NEED_INET_ATON_PROTO true)
endif (NOT HAVE_INET_ATON)

CHECK_FUNCTION_EXISTS(inet_ntoa HAVE_INET_NTOA)
if (NOT HAVE_INET_NTOA)
  SET(NEED_INET_NTOA_PROTO true)
endif (NOT HAVE_INET_NTOA)

CHECK_FUNCTION_EXISTS(listen HAVE_LISTEN)
if (NOT HAVE_LISTEN)
  SET(NEED_LISTEN_PROTO true)
endif (NOT HAVE_LISTEN)

CHECK_FUNCTION_EXISTS(ntohl HAVE_NTOHL)
if (NOT HAVE_NTOHL)
  SET(NEED_NTOHL_PROTO true)
endif (NOT HAVE_NTOHL)

CHECK_FUNCTION_EXISTS(perror HAVE_PERROR)
if (NOT HAVE_PERROR)
  SET(NEED_PERROR_PROTO true)
endif (NOT HAVE_PERROR)

CHECK_FUNCTION_EXISTS(printf HAVE_PRINTF)
if (NOT HAVE_PRINTF)
  SET(NEED_PRINTF_PROTO true)
endif (NOT HAVE_PRINTF)

CHECK_FUNCTION_EXISTS(qsort HAVE_QSORT)
if (NOT HAVE_QSORT)
  SET(NEED_QSORT_PROTO true)
endif (NOT HAVE_QSORT)

CHECK_FUNCTION_EXISTS(read HAVE_READ)
if (NOT HAVE_READ)
  SET(NEED_READ_PROTO true)
endif (NOT HAVE_READ)

CHECK_FUNCTION_EXISTS(remove HAVE_REMOVE)
if (NOT HAVE_REMOVE)
  SET(NEED_REMOVE_PROTO true)
endif (NOT HAVE_REMOVE)

CHECK_FUNCTION_EXISTS(rewind HAVE_REWIND)
if (NOT HAVE_REWIND)
  SET(NEED_REWIND_PROTO true)
endif (NOT HAVE_REWIND)

CHECK_FUNCTION_EXISTS(select HAVE_SELECT)
if (NOT HAVE_SELECT)
  SET(NEED_SELECT_PROTO true)
endif (NOT HAVE_SELECT)

CHECK_FUNCTION_EXISTS(setitimer HAVE_SETITIMER)
if (NOT HAVE_SETITIMER)
  SET(NEED_SETITIMER_PROTO true)
endif (NOT HAVE_SETITIMER)

CHECK_FUNCTION_EXISTS(setrlimit HAVE_SETRLIMIT)
if (NOT HAVE_SETRLIMIT)
  SET(NEED_SETRLIMIT_PROTO true)
endif (NOT HAVE_SETRLIMIT)

CHECK_FUNCTION_EXISTS(setsockopt HAVE_SETSOCKOPT)
if (NOT HAVE_SETSOCKOPT)
  SET(NEED_SETSOCKOPT_PROTO true)
endif (NOT HAVE_SETSOCKOPT)

CHECK_FUNCTION_EXISTS(snprintf HAVE_SNPRINTF)
if (NOT HAVE_SNPRINTF)
  SET(NEED_SNPRINTF_PROTO true)
endif (NOT HAVE_SNPRINTF)

CHECK_FUNCTION_EXISTS(socket HAVE_SOCKET)
if (NOT HAVE_SOCKET)
  SET(NEED_SOCKET_PROTO true)
endif (NOT HAVE_SOCKET)

CHECK_FUNCTION_EXISTS(sprintf HAVE_SPRINTF)
if (NOT HAVE_SPRINTF)
  SET(NEED_SPRINTF_PROTO true)
endif (NOT HAVE_SPRINTF)

CHECK_FUNCTION_EXISTS(sscanf HAVE_SSCANF)
if (NOT HAVE_SSCANF)
  SET(NEED_SSCANF_PROTO true)
endif (NOT HAVE_SSCANF)

CHECK_FUNCTION_EXISTS(strcasecmp HAVE_STRCASECMP)
if (NOT HAVE_STRCASECMP)
  SET(NEED_STRCASECMP_PROTO true)
endif (NOT HAVE_STRCASECMP)

CHECK_FUNCTION_EXISTS(strdup HAVE_STRDUP)
if (NOT HAVE_STRDUP)
  SET(NEED_STRDUP_PROTO true)
endif (NOT HAVE_STRDUP)

CHECK_FUNCTION_EXISTS(strerror HAVE_STRERROR)
if (NOT HAVE_STRERROR)
  SET(NEED_STRERROR_PROTO true)
endif (NOT HAVE_STRERROR)

CHECK_FUNCTION_EXISTS(stricmp HAVE_STRICMP)
if (NOT HAVE_STRICMP)
  SET(NEED_STRICMP_PROTO true)
endif (NOT HAVE_STRICMP)

CHECK_FUNCTION_EXISTS(strncasecmp HAVE_STRNCASECMP)
if (NOT HAVE_STRNCASECMP)
  SET(NEED_STRNCASECMP_PROTO true)
endif (NOT HAVE_STRNCASECMP)

CHECK_FUNCTION_EXISTS(strnicmp HAVE_STRNICMP)
if (NOT HAVE_STRNICMP)
  SET(NEED_STRNICMP_PROTO true)
endif (NOT HAVE_STRNICMP)

CHECK_FUNCTION_EXISTS(system HAVE_SYSTEM)
if (NOT HAVE_SYSTEM)
  SET(NEED_SYSTEM_PROTO true)
endif (NOT HAVE_SYSTEM)

CHECK_FUNCTION_EXISTS(time HAVE_TIME)
if (NOT HAVE_TIME)
  SET(NEED_TIME_PROTO true)
endif (NOT HAVE_TIME)

CHECK_FUNCTION_EXISTS(unlink HAVE_UNLINK)
if (NOT HAVE_UNLINK)
  SET(NEED_UNLINK_PROTO true)
endif (NOT HAVE_UNLINK)

CHECK_FUNCTION_EXISTS(vsnprintf HAVE_VSNPRINTF)
if (NOT HAVE_VSNPRINTF)
  SET(NEED_VSNPRINTF_PROTO true)
endif (NOT HAVE_VSNPRINTF)

CHECK_FUNCTION_EXISTS(write HAVE_WRITE)
if (NOT HAVE_WRITE)
  SET(NEED_WRITE_PROTO true)
endif (NOT HAVE_WRITE)

CHECK_LIBRARY_EXISTS(crypt crypt "" CIRCLE_CRYPT)
CHECK_LIBRARY_EXISTS(malloc malloc "" HAVE_LIBMALLOC)

SET(CMAKE_EXTRA_INCLUDE_FILES sys/socket.h)
CHECK_TYPE_SIZE(socklen_t TEMP_SOCK)
if (HAVE_TEMP_SOCK) 
  SET(socklen_t false)
else (HAVE_TEMP_SOCK)
  SET(socklen_t true)
endif (HAVE_TEMP_SOCK)

SET(CMAKE_EXTRA_INCLUDE_FILES)

SET(CMAKE_EXTRA_INCLUDE_FILES netinet/in.h)
CHECK_TYPE_SIZE("struct in_addr" STRUCT_IN_ADDR)
SET(CMAKE_EXTRA_INCLUDE_FILES)

CONFIGURE_FILE(${CMAKE_CURRENT_SOURCE_DIR}/conf.h.in ${CMAKE_CURRENT_SOURCE_DIR}/conf.h)


